// Copyright 2021-2024 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: cerbos/cloud/store/v1/store.proto

package storev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/cerbos/cerbos/api/genpb/cerbos/policy/v1"
	_ "github.com/cerbos/cloud-api/genpb/cerbos/cloud/pdp/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicyIDMatcher_Kind int32

const (
	PolicyIDMatcher_KIND_UNSPECIFIED      PolicyIDMatcher_Kind = 0
	PolicyIDMatcher_KIND_DERIVED_ROLES    PolicyIDMatcher_Kind = 1
	PolicyIDMatcher_KIND_EXPORT_VARIABLES PolicyIDMatcher_Kind = 2
	PolicyIDMatcher_KIND_PRINCIPAL        PolicyIDMatcher_Kind = 3
	PolicyIDMatcher_KIND_RESOURCE         PolicyIDMatcher_Kind = 4
)

// Enum value maps for PolicyIDMatcher_Kind.
var (
	PolicyIDMatcher_Kind_name = map[int32]string{
		0: "KIND_UNSPECIFIED",
		1: "KIND_DERIVED_ROLES",
		2: "KIND_EXPORT_VARIABLES",
		3: "KIND_PRINCIPAL",
		4: "KIND_RESOURCE",
	}
	PolicyIDMatcher_Kind_value = map[string]int32{
		"KIND_UNSPECIFIED":      0,
		"KIND_DERIVED_ROLES":    1,
		"KIND_EXPORT_VARIABLES": 2,
		"KIND_PRINCIPAL":        3,
		"KIND_RESOURCE":         4,
	}
)

func (x PolicyIDMatcher_Kind) Enum() *PolicyIDMatcher_Kind {
	p := new(PolicyIDMatcher_Kind)
	*p = x
	return p
}

func (x PolicyIDMatcher_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyIDMatcher_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_cerbos_cloud_store_v1_store_proto_enumTypes[0].Descriptor()
}

func (PolicyIDMatcher_Kind) Type() protoreflect.EnumType {
	return &file_cerbos_cloud_store_v1_store_proto_enumTypes[0]
}

func (x PolicyIDMatcher_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyIDMatcher_Kind.Descriptor instead.
func (PolicyIDMatcher_Kind) EnumDescriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{1, 0}
}

type PolicyIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyIds []string `protobuf:"bytes,1,rep,name=policy_ids,json=policyIds,proto3" json:"policy_ids,omitempty"`
}

func (x *PolicyIDList) Reset() {
	*x = PolicyIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyIDList) ProtoMessage() {}

func (x *PolicyIDList) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyIDList.ProtoReflect.Descriptor instead.
func (*PolicyIDList) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{0}
}

func (x *PolicyIDList) GetPolicyIds() []string {
	if x != nil {
		return x.PolicyIds
	}
	return nil
}

type PolicyIDMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind    PolicyIDMatcher_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=cerbos.cloud.store.v1.PolicyIDMatcher_Kind" json:"kind,omitempty"`
	Name    string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version string               `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Scope   string               `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *PolicyIDMatcher) Reset() {
	*x = PolicyIDMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyIDMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyIDMatcher) ProtoMessage() {}

func (x *PolicyIDMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyIDMatcher.ProtoReflect.Descriptor instead.
func (*PolicyIDMatcher) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{1}
}

func (x *PolicyIDMatcher) GetKind() PolicyIDMatcher_Kind {
	if x != nil {
		return x.Kind
	}
	return PolicyIDMatcher_KIND_UNSPECIFIED
}

func (x *PolicyIDMatcher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PolicyIDMatcher) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PolicyIDMatcher) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CurrentVersion uint64                 `protobuf:"varint,3,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{2}
}

func (x *Store) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Store) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Store) GetCurrentVersion() uint64 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

func (x *Store) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CreateStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateStoreRequest) Reset() {
	*x = CreateStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoreRequest) ProtoMessage() {}

func (x *CreateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoreRequest.ProtoReflect.Descriptor instead.
func (*CreateStoreRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{3}
}

func (x *CreateStoreRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStoreRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateStoreResponse) Reset() {
	*x = CreateStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoreResponse) ProtoMessage() {}

func (x *CreateStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoreResponse.ProtoReflect.Descriptor instead.
func (*CreateStoreResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{4}
}

type ListStoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStoresRequest) Reset() {
	*x = ListStoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresRequest) ProtoMessage() {}

func (x *ListStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresRequest.ProtoReflect.Descriptor instead.
func (*ListStoresRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{5}
}

type ListStoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stores []*Store `protobuf:"bytes,1,rep,name=stores,proto3" json:"stores,omitempty"`
}

func (x *ListStoresResponse) Reset() {
	*x = ListStoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresResponse) ProtoMessage() {}

func (x *ListStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresResponse.ProtoReflect.Descriptor instead.
func (*ListStoresResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{6}
}

func (x *ListStoresResponse) GetStores() []*Store {
	if x != nil {
		return x.Stores
	}
	return nil
}

type ListPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store string           `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	Match *PolicyIDMatcher `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *ListPoliciesRequest) Reset() {
	*x = ListPoliciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesRequest) ProtoMessage() {}

func (x *ListPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{7}
}

func (x *ListPoliciesRequest) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *ListPoliciesRequest) GetMatch() *PolicyIDMatcher {
	if x != nil {
		return x.Match
	}
	return nil
}

type ListPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyIds []string `protobuf:"bytes,1,rep,name=policy_ids,json=policyIds,proto3" json:"policy_ids,omitempty"`
}

func (x *ListPoliciesResponse) Reset() {
	*x = ListPoliciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesResponse) ProtoMessage() {}

func (x *ListPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{8}
}

func (x *ListPoliciesResponse) GetPolicyIds() []string {
	if x != nil {
		return x.PolicyIds
	}
	return nil
}

type GetPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store string `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	// Types that are assignable to Filter:
	//
	//	*GetPoliciesRequest_Ids
	//	*GetPoliciesRequest_Match
	Filter isGetPoliciesRequest_Filter `protobuf_oneof:"filter"`
}

func (x *GetPoliciesRequest) Reset() {
	*x = GetPoliciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoliciesRequest) ProtoMessage() {}

func (x *GetPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoliciesRequest.ProtoReflect.Descriptor instead.
func (*GetPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{9}
}

func (x *GetPoliciesRequest) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (m *GetPoliciesRequest) GetFilter() isGetPoliciesRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *GetPoliciesRequest) GetIds() *PolicyIDList {
	if x, ok := x.GetFilter().(*GetPoliciesRequest_Ids); ok {
		return x.Ids
	}
	return nil
}

func (x *GetPoliciesRequest) GetMatch() *PolicyIDMatcher {
	if x, ok := x.GetFilter().(*GetPoliciesRequest_Match); ok {
		return x.Match
	}
	return nil
}

type isGetPoliciesRequest_Filter interface {
	isGetPoliciesRequest_Filter()
}

type GetPoliciesRequest_Ids struct {
	Ids *PolicyIDList `protobuf:"bytes,2,opt,name=ids,proto3,oneof"`
}

type GetPoliciesRequest_Match struct {
	Match *PolicyIDMatcher `protobuf:"bytes,3,opt,name=match,proto3,oneof"`
}

func (*GetPoliciesRequest_Ids) isGetPoliciesRequest_Filter() {}

func (*GetPoliciesRequest_Match) isGetPoliciesRequest_Filter() {}

type GetPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies map[string]*v1.Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetPoliciesResponse) Reset() {
	*x = GetPoliciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoliciesResponse) ProtoMessage() {}

func (x *GetPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoliciesResponse.ProtoReflect.Descriptor instead.
func (*GetPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{10}
}

func (x *GetPoliciesResponse) GetPolicies() map[string]*v1.Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type PolicyOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Op:
	//
	//	*PolicyOp_AddOrUpdate
	//	*PolicyOp_Delete
	Op isPolicyOp_Op `protobuf_oneof:"op"`
}

func (x *PolicyOp) Reset() {
	*x = PolicyOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyOp) ProtoMessage() {}

func (x *PolicyOp) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyOp.ProtoReflect.Descriptor instead.
func (*PolicyOp) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{11}
}

func (m *PolicyOp) GetOp() isPolicyOp_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (x *PolicyOp) GetAddOrUpdate() *v1.Policy {
	if x, ok := x.GetOp().(*PolicyOp_AddOrUpdate); ok {
		return x.AddOrUpdate
	}
	return nil
}

func (x *PolicyOp) GetDelete() string {
	if x, ok := x.GetOp().(*PolicyOp_Delete); ok {
		return x.Delete
	}
	return ""
}

type isPolicyOp_Op interface {
	isPolicyOp_Op()
}

type PolicyOp_AddOrUpdate struct {
	AddOrUpdate *v1.Policy `protobuf:"bytes,1,opt,name=add_or_update,json=addOrUpdate,proto3,oneof"`
}

type PolicyOp_Delete struct {
	Delete string `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

func (*PolicyOp_AddOrUpdate) isPolicyOp_Op() {}

func (*PolicyOp_Delete) isPolicyOp_Op() {}

type ModifyPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store      string      `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	Operations []*PolicyOp `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *ModifyPoliciesRequest) Reset() {
	*x = ModifyPoliciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPoliciesRequest) ProtoMessage() {}

func (x *ModifyPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ModifyPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{12}
}

func (x *ModifyPoliciesRequest) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *ModifyPoliciesRequest) GetOperations() []*PolicyOp {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ModifyPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyPoliciesResponse) Reset() {
	*x = ModifyPoliciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPoliciesResponse) ProtoMessage() {}

func (x *ModifyPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ModifyPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{13}
}

var File_cerbos_cloud_store_v1_store_proto protoreflect.FileDescriptor

var file_cerbos_cloud_store_v1_store_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x64, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x64, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0e, 0xba, 0x48, 0x0b, 0x92, 0x01, 0x08,
	0x10, 0x32, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x64, 0x73, 0x22, 0xa2, 0x02, 0x0a, 0x0f, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x44, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4b, 0x69,
	0x6e, 0x64, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x22, 0x76, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x49, 0x4e, 0x44,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x53, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x45,
	0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x53, 0x10,
	0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x49, 0x4e, 0x43, 0x49,
	0x50, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x04, 0x22, 0xa1, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5b, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x22, 0x7a, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0x80, 0x01, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x65, 0x72, 0x62,
	0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x35, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x64, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0x80, 0x01, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x37, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x44, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xc2, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x55,
	0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x71, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f,
	0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x02, 0x6f,
	0x70, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x01, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x70, 0x42, 0x08, 0xba, 0x48, 0x05, 0x92, 0x01,
	0x02, 0x08, 0x01, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x18, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xbc, 0x04, 0x0a, 0x13, 0x43, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x66, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x29, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x29, 0x2e,
	0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6f, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x1a, 0x14, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x45, 0x58, 0x50, 0x45,
	0x52, 0x49, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_cerbos_cloud_store_v1_store_proto_rawDescOnce sync.Once
	file_cerbos_cloud_store_v1_store_proto_rawDescData = file_cerbos_cloud_store_v1_store_proto_rawDesc
)

func file_cerbos_cloud_store_v1_store_proto_rawDescGZIP() []byte {
	file_cerbos_cloud_store_v1_store_proto_rawDescOnce.Do(func() {
		file_cerbos_cloud_store_v1_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_cerbos_cloud_store_v1_store_proto_rawDescData)
	})
	return file_cerbos_cloud_store_v1_store_proto_rawDescData
}

var file_cerbos_cloud_store_v1_store_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cerbos_cloud_store_v1_store_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_cerbos_cloud_store_v1_store_proto_goTypes = []any{
	(PolicyIDMatcher_Kind)(0),      // 0: cerbos.cloud.store.v1.PolicyIDMatcher.Kind
	(*PolicyIDList)(nil),           // 1: cerbos.cloud.store.v1.PolicyIDList
	(*PolicyIDMatcher)(nil),        // 2: cerbos.cloud.store.v1.PolicyIDMatcher
	(*Store)(nil),                  // 3: cerbos.cloud.store.v1.Store
	(*CreateStoreRequest)(nil),     // 4: cerbos.cloud.store.v1.CreateStoreRequest
	(*CreateStoreResponse)(nil),    // 5: cerbos.cloud.store.v1.CreateStoreResponse
	(*ListStoresRequest)(nil),      // 6: cerbos.cloud.store.v1.ListStoresRequest
	(*ListStoresResponse)(nil),     // 7: cerbos.cloud.store.v1.ListStoresResponse
	(*ListPoliciesRequest)(nil),    // 8: cerbos.cloud.store.v1.ListPoliciesRequest
	(*ListPoliciesResponse)(nil),   // 9: cerbos.cloud.store.v1.ListPoliciesResponse
	(*GetPoliciesRequest)(nil),     // 10: cerbos.cloud.store.v1.GetPoliciesRequest
	(*GetPoliciesResponse)(nil),    // 11: cerbos.cloud.store.v1.GetPoliciesResponse
	(*PolicyOp)(nil),               // 12: cerbos.cloud.store.v1.PolicyOp
	(*ModifyPoliciesRequest)(nil),  // 13: cerbos.cloud.store.v1.ModifyPoliciesRequest
	(*ModifyPoliciesResponse)(nil), // 14: cerbos.cloud.store.v1.ModifyPoliciesResponse
	nil,                            // 15: cerbos.cloud.store.v1.GetPoliciesResponse.PoliciesEntry
	(*timestamppb.Timestamp)(nil),  // 16: google.protobuf.Timestamp
	(*v1.Policy)(nil),              // 17: cerbos.policy.v1.Policy
}
var file_cerbos_cloud_store_v1_store_proto_depIdxs = []int32{
	0,  // 0: cerbos.cloud.store.v1.PolicyIDMatcher.kind:type_name -> cerbos.cloud.store.v1.PolicyIDMatcher.Kind
	16, // 1: cerbos.cloud.store.v1.Store.created_at:type_name -> google.protobuf.Timestamp
	3,  // 2: cerbos.cloud.store.v1.ListStoresResponse.stores:type_name -> cerbos.cloud.store.v1.Store
	2,  // 3: cerbos.cloud.store.v1.ListPoliciesRequest.match:type_name -> cerbos.cloud.store.v1.PolicyIDMatcher
	1,  // 4: cerbos.cloud.store.v1.GetPoliciesRequest.ids:type_name -> cerbos.cloud.store.v1.PolicyIDList
	2,  // 5: cerbos.cloud.store.v1.GetPoliciesRequest.match:type_name -> cerbos.cloud.store.v1.PolicyIDMatcher
	15, // 6: cerbos.cloud.store.v1.GetPoliciesResponse.policies:type_name -> cerbos.cloud.store.v1.GetPoliciesResponse.PoliciesEntry
	17, // 7: cerbos.cloud.store.v1.PolicyOp.add_or_update:type_name -> cerbos.policy.v1.Policy
	12, // 8: cerbos.cloud.store.v1.ModifyPoliciesRequest.operations:type_name -> cerbos.cloud.store.v1.PolicyOp
	17, // 9: cerbos.cloud.store.v1.GetPoliciesResponse.PoliciesEntry.value:type_name -> cerbos.policy.v1.Policy
	4,  // 10: cerbos.cloud.store.v1.CerbosStoresService.CreateStore:input_type -> cerbos.cloud.store.v1.CreateStoreRequest
	6,  // 11: cerbos.cloud.store.v1.CerbosStoresService.ListStores:input_type -> cerbos.cloud.store.v1.ListStoresRequest
	10, // 12: cerbos.cloud.store.v1.CerbosStoresService.GetPolicies:input_type -> cerbos.cloud.store.v1.GetPoliciesRequest
	8,  // 13: cerbos.cloud.store.v1.CerbosStoresService.ListPolicies:input_type -> cerbos.cloud.store.v1.ListPoliciesRequest
	13, // 14: cerbos.cloud.store.v1.CerbosStoresService.ModifyPolicies:input_type -> cerbos.cloud.store.v1.ModifyPoliciesRequest
	5,  // 15: cerbos.cloud.store.v1.CerbosStoresService.CreateStore:output_type -> cerbos.cloud.store.v1.CreateStoreResponse
	7,  // 16: cerbos.cloud.store.v1.CerbosStoresService.ListStores:output_type -> cerbos.cloud.store.v1.ListStoresResponse
	11, // 17: cerbos.cloud.store.v1.CerbosStoresService.GetPolicies:output_type -> cerbos.cloud.store.v1.GetPoliciesResponse
	9,  // 18: cerbos.cloud.store.v1.CerbosStoresService.ListPolicies:output_type -> cerbos.cloud.store.v1.ListPoliciesResponse
	14, // 19: cerbos.cloud.store.v1.CerbosStoresService.ModifyPolicies:output_type -> cerbos.cloud.store.v1.ModifyPoliciesResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_cerbos_cloud_store_v1_store_proto_init() }
func file_cerbos_cloud_store_v1_store_proto_init() {
	if File_cerbos_cloud_store_v1_store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cerbos_cloud_store_v1_store_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PolicyIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PolicyIDMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListStoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListStoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListPoliciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListPoliciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetPoliciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetPoliciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PolicyOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ModifyPoliciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbos_cloud_store_v1_store_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ModifyPoliciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[9].OneofWrappers = []any{
		(*GetPoliciesRequest_Ids)(nil),
		(*GetPoliciesRequest_Match)(nil),
	}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[11].OneofWrappers = []any{
		(*PolicyOp_AddOrUpdate)(nil),
		(*PolicyOp_Delete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cerbos_cloud_store_v1_store_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cerbos_cloud_store_v1_store_proto_goTypes,
		DependencyIndexes: file_cerbos_cloud_store_v1_store_proto_depIdxs,
		EnumInfos:         file_cerbos_cloud_store_v1_store_proto_enumTypes,
		MessageInfos:      file_cerbos_cloud_store_v1_store_proto_msgTypes,
	}.Build()
	File_cerbos_cloud_store_v1_store_proto = out.File
	file_cerbos_cloud_store_v1_store_proto_rawDesc = nil
	file_cerbos_cloud_store_v1_store_proto_goTypes = nil
	file_cerbos_cloud_store_v1_store_proto_depIdxs = nil
}
