// Copyright 2021-2025 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cerbos/cloud/store/v1/store.proto

package storev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileError_Cause int32

const (
	FileError_CAUSE_UNSPECIFIED                FileError_Cause = 0
	FileError_CAUSE_INVALID_FILE_PATH          FileError_Cause = 1
	FileError_CAUSE_UNSUPPORTED_FILE_EXTENSION FileError_Cause = 2
	FileError_CAUSE_INVALID_FILE_CONTENTS      FileError_Cause = 3
	FileError_CAUSE_DUPLICATE_FILE_PATH        FileError_Cause = 4
	FileError_CAUSE_FILE_TOO_LARGE             FileError_Cause = 5
)

// Enum value maps for FileError_Cause.
var (
	FileError_Cause_name = map[int32]string{
		0: "CAUSE_UNSPECIFIED",
		1: "CAUSE_INVALID_FILE_PATH",
		2: "CAUSE_UNSUPPORTED_FILE_EXTENSION",
		3: "CAUSE_INVALID_FILE_CONTENTS",
		4: "CAUSE_DUPLICATE_FILE_PATH",
		5: "CAUSE_FILE_TOO_LARGE",
	}
	FileError_Cause_value = map[string]int32{
		"CAUSE_UNSPECIFIED":                0,
		"CAUSE_INVALID_FILE_PATH":          1,
		"CAUSE_UNSUPPORTED_FILE_EXTENSION": 2,
		"CAUSE_INVALID_FILE_CONTENTS":      3,
		"CAUSE_DUPLICATE_FILE_PATH":        4,
		"CAUSE_FILE_TOO_LARGE":             5,
	}
)

func (x FileError_Cause) Enum() *FileError_Cause {
	p := new(FileError_Cause)
	*p = x
	return p
}

func (x FileError_Cause) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileError_Cause) Descriptor() protoreflect.EnumDescriptor {
	return file_cerbos_cloud_store_v1_store_proto_enumTypes[0].Descriptor()
}

func (FileError_Cause) Type() protoreflect.EnumType {
	return &file_cerbos_cloud_store_v1_store_proto_enumTypes[0]
}

func (x FileError_Cause) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileError_Cause.Descriptor instead.
func (FileError_Cause) EnumDescriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{10, 0}
}

type StringMatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Match:
	//
	//	*StringMatch_Equals
	//	*StringMatch_Like
	//	*StringMatch_In
	Match         isStringMatch_Match `protobuf_oneof:"match"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringMatch) Reset() {
	*x = StringMatch{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMatch) ProtoMessage() {}

func (x *StringMatch) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMatch.ProtoReflect.Descriptor instead.
func (*StringMatch) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{0}
}

func (x *StringMatch) GetMatch() isStringMatch_Match {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *StringMatch) GetEquals() string {
	if x != nil {
		if x, ok := x.Match.(*StringMatch_Equals); ok {
			return x.Equals
		}
	}
	return ""
}

func (x *StringMatch) GetLike() string {
	if x != nil {
		if x, ok := x.Match.(*StringMatch_Like); ok {
			return x.Like
		}
	}
	return ""
}

func (x *StringMatch) GetIn() *StringMatch_InList {
	if x != nil {
		if x, ok := x.Match.(*StringMatch_In); ok {
			return x.In
		}
	}
	return nil
}

type isStringMatch_Match interface {
	isStringMatch_Match()
}

type StringMatch_Equals struct {
	Equals string `protobuf:"bytes,1,opt,name=equals,proto3,oneof"`
}

type StringMatch_Like struct {
	Like string `protobuf:"bytes,2,opt,name=like,proto3,oneof"`
}

type StringMatch_In struct {
	In *StringMatch_InList `protobuf:"bytes,3,opt,name=in,proto3,oneof"`
}

func (*StringMatch_Equals) isStringMatch_Match() {}

func (*StringMatch_Like) isStringMatch_Match() {}

func (*StringMatch_In) isStringMatch_Match() {}

type FileFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *StringMatch           `protobuf:"bytes,1,opt,name=path,proto3,oneof" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileFilter) Reset() {
	*x = FileFilter{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileFilter) ProtoMessage() {}

func (x *FileFilter) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileFilter.ProtoReflect.Descriptor instead.
func (*FileFilter) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{1}
}

func (x *FileFilter) GetPath() *StringMatch {
	if x != nil {
		return x.Path
	}
	return nil
}

type ListFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       string                 `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Filter        *FileFilter            `protobuf:"bytes,2,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{2}
}

func (x *ListFilesRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ListFilesRequest) GetFilter() *FileFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreVersion  int64                  `protobuf:"varint,1,opt,name=store_version,json=storeVersion,proto3" json:"store_version,omitempty"`
	Files         []string               `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesResponse) Reset() {
	*x = ListFilesResponse{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesResponse) ProtoMessage() {}

func (x *ListFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{3}
}

func (x *ListFilesResponse) GetStoreVersion() int64 {
	if x != nil {
		return x.StoreVersion
	}
	return 0
}

func (x *ListFilesResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       string                 `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Files         []string               `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFilesRequest) Reset() {
	*x = GetFilesRequest{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesRequest) ProtoMessage() {}

func (x *GetFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesRequest.ProtoReflect.Descriptor instead.
func (*GetFilesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{4}
}

func (x *GetFilesRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *GetFilesRequest) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Contents      []byte                 `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{5}
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

type GetFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreVersion  int64                  `protobuf:"varint,1,opt,name=store_version,json=storeVersion,proto3" json:"store_version,omitempty"`
	Files         []*File                `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFilesResponse) Reset() {
	*x = GetFilesResponse{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesResponse) ProtoMessage() {}

func (x *GetFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesResponse.ProtoReflect.Descriptor instead.
func (*GetFilesResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{6}
}

func (x *GetFilesResponse) GetStoreVersion() int64 {
	if x != nil {
		return x.StoreVersion
	}
	return 0
}

func (x *GetFilesResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type ChangeDetails struct {
	state       protoimpl.MessageState  `protogen:"open.v1"`
	Description string                  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Uploader    *ChangeDetails_Uploader `protobuf:"bytes,2,opt,name=uploader,proto3" json:"uploader,omitempty"`
	// Types that are valid to be assigned to Origin:
	//
	//	*ChangeDetails_Git_
	//	*ChangeDetails_Internal_
	Origin        isChangeDetails_Origin `protobuf_oneof:"origin"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeDetails) Reset() {
	*x = ChangeDetails{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDetails) ProtoMessage() {}

func (x *ChangeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDetails.ProtoReflect.Descriptor instead.
func (*ChangeDetails) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChangeDetails) GetUploader() *ChangeDetails_Uploader {
	if x != nil {
		return x.Uploader
	}
	return nil
}

func (x *ChangeDetails) GetOrigin() isChangeDetails_Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *ChangeDetails) GetGit() *ChangeDetails_Git {
	if x != nil {
		if x, ok := x.Origin.(*ChangeDetails_Git_); ok {
			return x.Git
		}
	}
	return nil
}

func (x *ChangeDetails) GetInternal() *ChangeDetails_Internal {
	if x != nil {
		if x, ok := x.Origin.(*ChangeDetails_Internal_); ok {
			return x.Internal
		}
	}
	return nil
}

type isChangeDetails_Origin interface {
	isChangeDetails_Origin()
}

type ChangeDetails_Git_ struct {
	Git *ChangeDetails_Git `protobuf:"bytes,3,opt,name=git,proto3,oneof"`
}

type ChangeDetails_Internal_ struct {
	Internal *ChangeDetails_Internal `protobuf:"bytes,4,opt,name=internal,proto3,oneof"`
}

func (*ChangeDetails_Git_) isChangeDetails_Origin() {}

func (*ChangeDetails_Internal_) isChangeDetails_Origin() {}

type FileOp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Op:
	//
	//	*FileOp_AddOrUpdate
	//	*FileOp_Delete
	Op            isFileOp_Op `protobuf_oneof:"op"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileOp) Reset() {
	*x = FileOp{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOp) ProtoMessage() {}

func (x *FileOp) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOp.ProtoReflect.Descriptor instead.
func (*FileOp) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{8}
}

func (x *FileOp) GetOp() isFileOp_Op {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *FileOp) GetAddOrUpdate() *File {
	if x != nil {
		if x, ok := x.Op.(*FileOp_AddOrUpdate); ok {
			return x.AddOrUpdate
		}
	}
	return nil
}

func (x *FileOp) GetDelete() string {
	if x != nil {
		if x, ok := x.Op.(*FileOp_Delete); ok {
			return x.Delete
		}
	}
	return ""
}

type isFileOp_Op interface {
	isFileOp_Op()
}

type FileOp_AddOrUpdate struct {
	AddOrUpdate *File `protobuf:"bytes,1,opt,name=add_or_update,json=addOrUpdate,proto3,oneof"`
}

type FileOp_Delete struct {
	Delete string `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

func (*FileOp_AddOrUpdate) isFileOp_Op() {}

func (*FileOp_Delete) isFileOp_Op() {}

type ModifyFilesRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	StoreId       string                        `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Condition     *ModifyFilesRequest_Condition `protobuf:"bytes,2,opt,name=condition,proto3,oneof" json:"condition,omitempty"`
	Operations    []*FileOp                     `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
	ChangeDetails *ChangeDetails                `protobuf:"bytes,4,opt,name=change_details,json=changeDetails,proto3,oneof" json:"change_details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyFilesRequest) Reset() {
	*x = ModifyFilesRequest{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyFilesRequest) ProtoMessage() {}

func (x *ModifyFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyFilesRequest.ProtoReflect.Descriptor instead.
func (*ModifyFilesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyFilesRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ModifyFilesRequest) GetCondition() *ModifyFilesRequest_Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *ModifyFilesRequest) GetOperations() []*FileOp {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ModifyFilesRequest) GetChangeDetails() *ChangeDetails {
	if x != nil {
		return x.ChangeDetails
	}
	return nil
}

type FileError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          string                 `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Cause         FileError_Cause        `protobuf:"varint,2,opt,name=cause,proto3,enum=cerbos.cloud.store.v1.FileError_Cause" json:"cause,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileError) Reset() {
	*x = FileError{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileError) ProtoMessage() {}

func (x *FileError) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileError.ProtoReflect.Descriptor instead.
func (*FileError) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{10}
}

func (x *FileError) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *FileError) GetCause() FileError_Cause {
	if x != nil {
		return x.Cause
	}
	return FileError_CAUSE_UNSPECIFIED
}

func (x *FileError) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type ModifyFilesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NewStoreVersion int64                  `protobuf:"varint,1,opt,name=new_store_version,json=newStoreVersion,proto3" json:"new_store_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ModifyFilesResponse) Reset() {
	*x = ModifyFilesResponse{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyFilesResponse) ProtoMessage() {}

func (x *ModifyFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyFilesResponse.ProtoReflect.Descriptor instead.
func (*ModifyFilesResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{11}
}

func (x *ModifyFilesResponse) GetNewStoreVersion() int64 {
	if x != nil {
		return x.NewStoreVersion
	}
	return 0
}

type ReplaceFilesRequest struct {
	state     protoimpl.MessageState         `protogen:"open.v1"`
	StoreId   string                         `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Condition *ReplaceFilesRequest_Condition `protobuf:"bytes,2,opt,name=condition,proto3,oneof" json:"condition,omitempty"`
	// Types that are valid to be assigned to Contents:
	//
	//	*ReplaceFilesRequest_ZippedContents
	//	*ReplaceFilesRequest_Files_
	Contents      isReplaceFilesRequest_Contents `protobuf_oneof:"contents"`
	ChangeDetails *ChangeDetails                 `protobuf:"bytes,4,opt,name=change_details,json=changeDetails,proto3,oneof" json:"change_details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplaceFilesRequest) Reset() {
	*x = ReplaceFilesRequest{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceFilesRequest) ProtoMessage() {}

func (x *ReplaceFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceFilesRequest.ProtoReflect.Descriptor instead.
func (*ReplaceFilesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{12}
}

func (x *ReplaceFilesRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ReplaceFilesRequest) GetCondition() *ReplaceFilesRequest_Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *ReplaceFilesRequest) GetContents() isReplaceFilesRequest_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *ReplaceFilesRequest) GetZippedContents() []byte {
	if x != nil {
		if x, ok := x.Contents.(*ReplaceFilesRequest_ZippedContents); ok {
			return x.ZippedContents
		}
	}
	return nil
}

func (x *ReplaceFilesRequest) GetFiles() *ReplaceFilesRequest_Files {
	if x != nil {
		if x, ok := x.Contents.(*ReplaceFilesRequest_Files_); ok {
			return x.Files
		}
	}
	return nil
}

func (x *ReplaceFilesRequest) GetChangeDetails() *ChangeDetails {
	if x != nil {
		return x.ChangeDetails
	}
	return nil
}

type isReplaceFilesRequest_Contents interface {
	isReplaceFilesRequest_Contents()
}

type ReplaceFilesRequest_ZippedContents struct {
	ZippedContents []byte `protobuf:"bytes,3,opt,name=zipped_contents,json=zippedContents,proto3,oneof"`
}

type ReplaceFilesRequest_Files_ struct {
	Files *ReplaceFilesRequest_Files `protobuf:"bytes,5,opt,name=files,proto3,oneof"`
}

func (*ReplaceFilesRequest_ZippedContents) isReplaceFilesRequest_Contents() {}

func (*ReplaceFilesRequest_Files_) isReplaceFilesRequest_Contents() {}

type ErrDetailValidationFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Errors        []*FileError           `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrDetailValidationFailure) Reset() {
	*x = ErrDetailValidationFailure{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrDetailValidationFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrDetailValidationFailure) ProtoMessage() {}

func (x *ErrDetailValidationFailure) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrDetailValidationFailure.ProtoReflect.Descriptor instead.
func (*ErrDetailValidationFailure) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{13}
}

func (x *ErrDetailValidationFailure) GetErrors() []*FileError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ErrDetailNoUsableFiles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IgnoredFiles  []string               `protobuf:"bytes,1,rep,name=ignored_files,json=ignoredFiles,proto3" json:"ignored_files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrDetailNoUsableFiles) Reset() {
	*x = ErrDetailNoUsableFiles{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrDetailNoUsableFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrDetailNoUsableFiles) ProtoMessage() {}

func (x *ErrDetailNoUsableFiles) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrDetailNoUsableFiles.ProtoReflect.Descriptor instead.
func (*ErrDetailNoUsableFiles) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{14}
}

func (x *ErrDetailNoUsableFiles) GetIgnoredFiles() []string {
	if x != nil {
		return x.IgnoredFiles
	}
	return nil
}

type ErrDetailConditionUnsatisfied struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	CurrentStoreVersion int64                  `protobuf:"varint,1,opt,name=current_store_version,json=currentStoreVersion,proto3" json:"current_store_version,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ErrDetailConditionUnsatisfied) Reset() {
	*x = ErrDetailConditionUnsatisfied{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrDetailConditionUnsatisfied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrDetailConditionUnsatisfied) ProtoMessage() {}

func (x *ErrDetailConditionUnsatisfied) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrDetailConditionUnsatisfied.ProtoReflect.Descriptor instead.
func (*ErrDetailConditionUnsatisfied) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{15}
}

func (x *ErrDetailConditionUnsatisfied) GetCurrentStoreVersion() int64 {
	if x != nil {
		return x.CurrentStoreVersion
	}
	return 0
}

type ErrDetailOperationDiscarded struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	CurrentStoreVersion int64                  `protobuf:"varint,1,opt,name=current_store_version,json=currentStoreVersion,proto3" json:"current_store_version,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ErrDetailOperationDiscarded) Reset() {
	*x = ErrDetailOperationDiscarded{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrDetailOperationDiscarded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrDetailOperationDiscarded) ProtoMessage() {}

func (x *ErrDetailOperationDiscarded) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrDetailOperationDiscarded.ProtoReflect.Descriptor instead.
func (*ErrDetailOperationDiscarded) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{16}
}

func (x *ErrDetailOperationDiscarded) GetCurrentStoreVersion() int64 {
	if x != nil {
		return x.CurrentStoreVersion
	}
	return 0
}

type ErrDetailCannotModifyGitConnectedStore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrDetailCannotModifyGitConnectedStore) Reset() {
	*x = ErrDetailCannotModifyGitConnectedStore{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrDetailCannotModifyGitConnectedStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrDetailCannotModifyGitConnectedStore) ProtoMessage() {}

func (x *ErrDetailCannotModifyGitConnectedStore) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrDetailCannotModifyGitConnectedStore.ProtoReflect.Descriptor instead.
func (*ErrDetailCannotModifyGitConnectedStore) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{17}
}

type ReplaceFilesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NewStoreVersion int64                  `protobuf:"varint,1,opt,name=new_store_version,json=newStoreVersion,proto3" json:"new_store_version,omitempty"`
	IgnoredFiles    []string               `protobuf:"bytes,2,rep,name=ignored_files,json=ignoredFiles,proto3" json:"ignored_files,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReplaceFilesResponse) Reset() {
	*x = ReplaceFilesResponse{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceFilesResponse) ProtoMessage() {}

func (x *ReplaceFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceFilesResponse.ProtoReflect.Descriptor instead.
func (*ReplaceFilesResponse) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{18}
}

func (x *ReplaceFilesResponse) GetNewStoreVersion() int64 {
	if x != nil {
		return x.NewStoreVersion
	}
	return 0
}

func (x *ReplaceFilesResponse) GetIgnoredFiles() []string {
	if x != nil {
		return x.IgnoredFiles
	}
	return nil
}

type StringMatch_InList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringMatch_InList) Reset() {
	*x = StringMatch_InList{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringMatch_InList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMatch_InList) ProtoMessage() {}

func (x *StringMatch_InList) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMatch_InList.ProtoReflect.Descriptor instead.
func (*StringMatch_InList) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StringMatch_InList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type ChangeDetails_Git struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repo          string                 `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	Ref           string                 `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Hash          string                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Committer     string                 `protobuf:"bytes,5,opt,name=committer,proto3" json:"committer,omitempty"`
	CommitDate    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=commit_date,json=commitDate,proto3" json:"commit_date,omitempty"`
	Author        string                 `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	AuthorDate    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=author_date,json=authorDate,proto3" json:"author_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeDetails_Git) Reset() {
	*x = ChangeDetails_Git{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeDetails_Git) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDetails_Git) ProtoMessage() {}

func (x *ChangeDetails_Git) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDetails_Git.ProtoReflect.Descriptor instead.
func (*ChangeDetails_Git) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ChangeDetails_Git) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *ChangeDetails_Git) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *ChangeDetails_Git) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ChangeDetails_Git) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChangeDetails_Git) GetCommitter() string {
	if x != nil {
		return x.Committer
	}
	return ""
}

func (x *ChangeDetails_Git) GetCommitDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CommitDate
	}
	return nil
}

func (x *ChangeDetails_Git) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ChangeDetails_Git) GetAuthorDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AuthorDate
	}
	return nil
}

type ChangeDetails_Internal struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Source        string                     `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Metadata      map[string]*structpb.Value `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeDetails_Internal) Reset() {
	*x = ChangeDetails_Internal{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeDetails_Internal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDetails_Internal) ProtoMessage() {}

func (x *ChangeDetails_Internal) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDetails_Internal.ProtoReflect.Descriptor instead.
func (*ChangeDetails_Internal) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ChangeDetails_Internal) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ChangeDetails_Internal) GetMetadata() map[string]*structpb.Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ChangeDetails_Uploader struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Name          string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Metadata      map[string]*structpb.Value `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeDetails_Uploader) Reset() {
	*x = ChangeDetails_Uploader{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeDetails_Uploader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDetails_Uploader) ProtoMessage() {}

func (x *ChangeDetails_Uploader) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDetails_Uploader.ProtoReflect.Descriptor instead.
func (*ChangeDetails_Uploader) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{7, 2}
}

func (x *ChangeDetails_Uploader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChangeDetails_Uploader) GetMetadata() map[string]*structpb.Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ModifyFilesRequest_Condition struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	StoreVersionMustEqual int64                  `protobuf:"varint,1,opt,name=store_version_must_equal,json=storeVersionMustEqual,proto3" json:"store_version_must_equal,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ModifyFilesRequest_Condition) Reset() {
	*x = ModifyFilesRequest_Condition{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyFilesRequest_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyFilesRequest_Condition) ProtoMessage() {}

func (x *ModifyFilesRequest_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyFilesRequest_Condition.ProtoReflect.Descriptor instead.
func (*ModifyFilesRequest_Condition) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ModifyFilesRequest_Condition) GetStoreVersionMustEqual() int64 {
	if x != nil {
		return x.StoreVersionMustEqual
	}
	return 0
}

type ReplaceFilesRequest_Condition struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	StoreVersionMustEqual int64                  `protobuf:"varint,1,opt,name=store_version_must_equal,json=storeVersionMustEqual,proto3" json:"store_version_must_equal,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ReplaceFilesRequest_Condition) Reset() {
	*x = ReplaceFilesRequest_Condition{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceFilesRequest_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceFilesRequest_Condition) ProtoMessage() {}

func (x *ReplaceFilesRequest_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceFilesRequest_Condition.ProtoReflect.Descriptor instead.
func (*ReplaceFilesRequest_Condition) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ReplaceFilesRequest_Condition) GetStoreVersionMustEqual() int64 {
	if x != nil {
		return x.StoreVersionMustEqual
	}
	return 0
}

type ReplaceFilesRequest_Files struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*File                `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplaceFilesRequest_Files) Reset() {
	*x = ReplaceFilesRequest_Files{}
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceFilesRequest_Files) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceFilesRequest_Files) ProtoMessage() {}

func (x *ReplaceFilesRequest_Files) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_store_v1_store_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceFilesRequest_Files.ProtoReflect.Descriptor instead.
func (*ReplaceFilesRequest_Files) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_store_v1_store_proto_rawDescGZIP(), []int{12, 1}
}

func (x *ReplaceFilesRequest_Files) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

var File_cerbos_cloud_store_v1_store_proto protoreflect.FileDescriptor

const file_cerbos_cloud_store_v1_store_proto_rawDesc = "" +
	"\n" +
	"!cerbos/cloud/store/v1/store.proto\x12\x15cerbos.cloud.store.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbc\x01\n" +
	"\vStringMatch\x12\x18\n" +
	"\x06equals\x18\x01 \x01(\tH\x00R\x06equals\x12\x14\n" +
	"\x04like\x18\x02 \x01(\tH\x00R\x04like\x12;\n" +
	"\x02in\x18\x03 \x01(\v2).cerbos.cloud.store.v1.StringMatch.InListH\x00R\x02in\x1a0\n" +
	"\x06InList\x12&\n" +
	"\x06values\x18\x01 \x03(\tB\x0e\xbaH\v\x92\x01\b\x10\n" +
	"\"\x04r\x02\x10\x01R\x06valuesB\x0e\n" +
	"\x05match\x12\x05\xbaH\x02\b\x01\"R\n" +
	"\n" +
	"FileFilter\x12;\n" +
	"\x04path\x18\x01 \x01(\v2\".cerbos.cloud.store.v1.StringMatchH\x00R\x04path\x88\x01\x01B\a\n" +
	"\x05_path\"\x82\x01\n" +
	"\x10ListFilesRequest\x12#\n" +
	"\bstore_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\x98\x01\fR\astoreId\x12>\n" +
	"\x06filter\x18\x02 \x01(\v2!.cerbos.cloud.store.v1.FileFilterH\x00R\x06filter\x88\x01\x01B\t\n" +
	"\a_filter\"N\n" +
	"\x11ListFilesResponse\x12#\n" +
	"\rstore_version\x18\x01 \x01(\x03R\fstoreVersion\x12\x14\n" +
	"\x05files\x18\x02 \x03(\tR\x05files\"`\n" +
	"\x0fGetFilesRequest\x12#\n" +
	"\bstore_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\x98\x01\fR\astoreId\x12(\n" +
	"\x05files\x18\x02 \x03(\tB\x12\xbaH\x0f\x92\x01\f\b\x01\x10\n" +
	"\x18\x01\"\x04r\x02\x10\x01R\x05files\"P\n" +
	"\x04File\x12\x1e\n" +
	"\x04path\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\bR\x04path\x12(\n" +
	"\bcontents\x18\x02 \x01(\fB\f\xbaH\tz\a\x10\x01\x18\x80\x80\xc0\x02R\bcontents\"j\n" +
	"\x10GetFilesResponse\x12#\n" +
	"\rstore_version\x18\x01 \x01(\x03R\fstoreVersion\x121\n" +
	"\x05files\x18\x02 \x03(\v2\x1b.cerbos.cloud.store.v1.FileR\x05files\"\xbf\a\n" +
	"\rChangeDetails\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12I\n" +
	"\buploader\x18\x02 \x01(\v2-.cerbos.cloud.store.v1.ChangeDetails.UploaderR\buploader\x12<\n" +
	"\x03git\x18\x03 \x01(\v2(.cerbos.cloud.store.v1.ChangeDetails.GitH\x00R\x03git\x12K\n" +
	"\binternal\x18\x04 \x01(\v2-.cerbos.cloud.store.v1.ChangeDetails.InternalH\x00R\binternal\x1a\x89\x02\n" +
	"\x03Git\x12\x12\n" +
	"\x04repo\x18\x01 \x01(\tR\x04repo\x12\x10\n" +
	"\x03ref\x18\x02 \x01(\tR\x03ref\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\tR\x04hash\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x1c\n" +
	"\tcommitter\x18\x05 \x01(\tR\tcommitter\x12;\n" +
	"\vcommit_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"commitDate\x12\x16\n" +
	"\x06author\x18\a \x01(\tR\x06author\x12;\n" +
	"\vauthor_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"authorDate\x1a\xd0\x01\n" +
	"\bInternal\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12W\n" +
	"\bmetadata\x18\x02 \x03(\v2;.cerbos.cloud.store.v1.ChangeDetails.Internal.MetadataEntryR\bmetadata\x1aS\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\x1a\xcc\x01\n" +
	"\bUploader\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12W\n" +
	"\bmetadata\x18\x02 \x03(\v2;.cerbos.cloud.store.v1.ChangeDetails.Uploader.MetadataEntryR\bmetadata\x1aS\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01B\b\n" +
	"\x06origin\"r\n" +
	"\x06FileOp\x12A\n" +
	"\radd_or_update\x18\x01 \x01(\v2\x1b.cerbos.cloud.store.v1.FileH\x00R\vaddOrUpdate\x12\x18\n" +
	"\x06delete\x18\x02 \x01(\tH\x00R\x06deleteB\v\n" +
	"\x02op\x12\x05\xbaH\x02\b\x01\"\x9e\x03\n" +
	"\x12ModifyFilesRequest\x12#\n" +
	"\bstore_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\x98\x01\fR\astoreId\x12V\n" +
	"\tcondition\x18\x02 \x01(\v23.cerbos.cloud.store.v1.ModifyFilesRequest.ConditionH\x00R\tcondition\x88\x01\x01\x12I\n" +
	"\n" +
	"operations\x18\x03 \x03(\v2\x1d.cerbos.cloud.store.v1.FileOpB\n" +
	"\xbaH\a\x92\x01\x04\b\x01\x10\x19R\n" +
	"operations\x12P\n" +
	"\x0echange_details\x18\x04 \x01(\v2$.cerbos.cloud.store.v1.ChangeDetailsH\x01R\rchangeDetails\x88\x01\x01\x1aM\n" +
	"\tCondition\x12@\n" +
	"\x18store_version_must_equal\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\x15storeVersionMustEqualB\f\n" +
	"\n" +
	"_conditionB\x11\n" +
	"\x0f_change_details\"\xb5\x02\n" +
	"\tFileError\x12\x12\n" +
	"\x04file\x18\x01 \x01(\tR\x04file\x12<\n" +
	"\x05cause\x18\x02 \x01(\x0e2&.cerbos.cloud.store.v1.FileError.CauseR\x05cause\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\"\xbb\x01\n" +
	"\x05Cause\x12\x15\n" +
	"\x11CAUSE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17CAUSE_INVALID_FILE_PATH\x10\x01\x12$\n" +
	" CAUSE_UNSUPPORTED_FILE_EXTENSION\x10\x02\x12\x1f\n" +
	"\x1bCAUSE_INVALID_FILE_CONTENTS\x10\x03\x12\x1d\n" +
	"\x19CAUSE_DUPLICATE_FILE_PATH\x10\x04\x12\x18\n" +
	"\x14CAUSE_FILE_TOO_LARGE\x10\x05\"A\n" +
	"\x13ModifyFilesResponse\x12*\n" +
	"\x11new_store_version\x18\x01 \x01(\x03R\x0fnewStoreVersion\"\x83\x05\n" +
	"\x13ReplaceFilesRequest\x12#\n" +
	"\bstore_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\x98\x01\fR\astoreId\x12W\n" +
	"\tcondition\x18\x02 \x01(\v24.cerbos.cloud.store.v1.ReplaceFilesRequest.ConditionH\x01R\tcondition\x88\x01\x01\x127\n" +
	"\x0fzipped_contents\x18\x03 \x01(\fB\f\xbaH\tz\a\x10\x16\x18\x80\x80\xc0\aH\x00R\x0ezippedContents\x12H\n" +
	"\x05files\x18\x05 \x01(\v20.cerbos.cloud.store.v1.ReplaceFilesRequest.FilesH\x00R\x05files\x12P\n" +
	"\x0echange_details\x18\x04 \x01(\v2$.cerbos.cloud.store.v1.ChangeDetailsH\x02R\rchangeDetails\x88\x01\x01\x1aM\n" +
	"\tCondition\x12@\n" +
	"\x18store_version_must_equal\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\x15storeVersionMustEqual\x1a\x95\x01\n" +
	"\x05Files\x12\x8b\x01\n" +
	"\x05files\x18\x01 \x03(\v2\x1b.cerbos.cloud.store.v1.FileBX\xbaHU\xba\x01M\n" +
	"\x12files.unique_paths\x12\x19File paths must be unique\x1a\x1cthis.map(f, f.path).unique()\x92\x01\x02\b\x01R\x05filesB\x11\n" +
	"\bcontents\x12\x05\xbaH\x02\b\x01B\f\n" +
	"\n" +
	"_conditionB\x11\n" +
	"\x0f_change_details\"V\n" +
	"\x1aErrDetailValidationFailure\x128\n" +
	"\x06errors\x18\x01 \x03(\v2 .cerbos.cloud.store.v1.FileErrorR\x06errors\"=\n" +
	"\x16ErrDetailNoUsableFiles\x12#\n" +
	"\rignored_files\x18\x01 \x03(\tR\fignoredFiles\"S\n" +
	"\x1dErrDetailConditionUnsatisfied\x122\n" +
	"\x15current_store_version\x18\x01 \x01(\x03R\x13currentStoreVersion\"Q\n" +
	"\x1bErrDetailOperationDiscarded\x122\n" +
	"\x15current_store_version\x18\x01 \x01(\x03R\x13currentStoreVersion\"(\n" +
	"&ErrDetailCannotModifyGitConnectedStore\"g\n" +
	"\x14ReplaceFilesResponse\x12*\n" +
	"\x11new_store_version\x18\x01 \x01(\x03R\x0fnewStoreVersion\x12#\n" +
	"\rignored_files\x18\x02 \x03(\tR\fignoredFiles2\xc4\x03\n" +
	"\x12CerbosStoreService\x12c\n" +
	"\tListFiles\x12'.cerbos.cloud.store.v1.ListFilesRequest\x1a(.cerbos.cloud.store.v1.ListFilesResponse\"\x03\x90\x02\x01\x12`\n" +
	"\bGetFiles\x12&.cerbos.cloud.store.v1.GetFilesRequest\x1a'.cerbos.cloud.store.v1.GetFilesResponse\"\x03\x90\x02\x01\x12f\n" +
	"\vModifyFiles\x12).cerbos.cloud.store.v1.ModifyFilesRequest\x1a*.cerbos.cloud.store.v1.ModifyFilesResponse\"\x00\x12i\n" +
	"\fReplaceFiles\x12*.cerbos.cloud.store.v1.ReplaceFilesRequest\x1a+.cerbos.cloud.store.v1.ReplaceFilesResponse\"\x00\x1a\x14\xfa\xd2\xe4\x93\x02\x0e\x12\fEXPERIMENTALB|\n" +
	"\x1ddev.cerbos.api.cloud.v1.storeZ?github.com/cerbos/cloud-api/genpb/cerbos/cloud/store/v1;storev1\xaa\x02\x19Cerbos.Api.Cloud.V1.Storeb\x06proto3"

var (
	file_cerbos_cloud_store_v1_store_proto_rawDescOnce sync.Once
	file_cerbos_cloud_store_v1_store_proto_rawDescData []byte
)

func file_cerbos_cloud_store_v1_store_proto_rawDescGZIP() []byte {
	file_cerbos_cloud_store_v1_store_proto_rawDescOnce.Do(func() {
		file_cerbos_cloud_store_v1_store_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cerbos_cloud_store_v1_store_proto_rawDesc), len(file_cerbos_cloud_store_v1_store_proto_rawDesc)))
	})
	return file_cerbos_cloud_store_v1_store_proto_rawDescData
}

var file_cerbos_cloud_store_v1_store_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cerbos_cloud_store_v1_store_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_cerbos_cloud_store_v1_store_proto_goTypes = []any{
	(FileError_Cause)(0),                           // 0: cerbos.cloud.store.v1.FileError.Cause
	(*StringMatch)(nil),                            // 1: cerbos.cloud.store.v1.StringMatch
	(*FileFilter)(nil),                             // 2: cerbos.cloud.store.v1.FileFilter
	(*ListFilesRequest)(nil),                       // 3: cerbos.cloud.store.v1.ListFilesRequest
	(*ListFilesResponse)(nil),                      // 4: cerbos.cloud.store.v1.ListFilesResponse
	(*GetFilesRequest)(nil),                        // 5: cerbos.cloud.store.v1.GetFilesRequest
	(*File)(nil),                                   // 6: cerbos.cloud.store.v1.File
	(*GetFilesResponse)(nil),                       // 7: cerbos.cloud.store.v1.GetFilesResponse
	(*ChangeDetails)(nil),                          // 8: cerbos.cloud.store.v1.ChangeDetails
	(*FileOp)(nil),                                 // 9: cerbos.cloud.store.v1.FileOp
	(*ModifyFilesRequest)(nil),                     // 10: cerbos.cloud.store.v1.ModifyFilesRequest
	(*FileError)(nil),                              // 11: cerbos.cloud.store.v1.FileError
	(*ModifyFilesResponse)(nil),                    // 12: cerbos.cloud.store.v1.ModifyFilesResponse
	(*ReplaceFilesRequest)(nil),                    // 13: cerbos.cloud.store.v1.ReplaceFilesRequest
	(*ErrDetailValidationFailure)(nil),             // 14: cerbos.cloud.store.v1.ErrDetailValidationFailure
	(*ErrDetailNoUsableFiles)(nil),                 // 15: cerbos.cloud.store.v1.ErrDetailNoUsableFiles
	(*ErrDetailConditionUnsatisfied)(nil),          // 16: cerbos.cloud.store.v1.ErrDetailConditionUnsatisfied
	(*ErrDetailOperationDiscarded)(nil),            // 17: cerbos.cloud.store.v1.ErrDetailOperationDiscarded
	(*ErrDetailCannotModifyGitConnectedStore)(nil), // 18: cerbos.cloud.store.v1.ErrDetailCannotModifyGitConnectedStore
	(*ReplaceFilesResponse)(nil),                   // 19: cerbos.cloud.store.v1.ReplaceFilesResponse
	(*StringMatch_InList)(nil),                     // 20: cerbos.cloud.store.v1.StringMatch.InList
	(*ChangeDetails_Git)(nil),                      // 21: cerbos.cloud.store.v1.ChangeDetails.Git
	(*ChangeDetails_Internal)(nil),                 // 22: cerbos.cloud.store.v1.ChangeDetails.Internal
	(*ChangeDetails_Uploader)(nil),                 // 23: cerbos.cloud.store.v1.ChangeDetails.Uploader
	nil,                                            // 24: cerbos.cloud.store.v1.ChangeDetails.Internal.MetadataEntry
	nil,                                            // 25: cerbos.cloud.store.v1.ChangeDetails.Uploader.MetadataEntry
	(*ModifyFilesRequest_Condition)(nil),           // 26: cerbos.cloud.store.v1.ModifyFilesRequest.Condition
	(*ReplaceFilesRequest_Condition)(nil),          // 27: cerbos.cloud.store.v1.ReplaceFilesRequest.Condition
	(*ReplaceFilesRequest_Files)(nil),              // 28: cerbos.cloud.store.v1.ReplaceFilesRequest.Files
	(*timestamppb.Timestamp)(nil),                  // 29: google.protobuf.Timestamp
	(*structpb.Value)(nil),                         // 30: google.protobuf.Value
}
var file_cerbos_cloud_store_v1_store_proto_depIdxs = []int32{
	20, // 0: cerbos.cloud.store.v1.StringMatch.in:type_name -> cerbos.cloud.store.v1.StringMatch.InList
	1,  // 1: cerbos.cloud.store.v1.FileFilter.path:type_name -> cerbos.cloud.store.v1.StringMatch
	2,  // 2: cerbos.cloud.store.v1.ListFilesRequest.filter:type_name -> cerbos.cloud.store.v1.FileFilter
	6,  // 3: cerbos.cloud.store.v1.GetFilesResponse.files:type_name -> cerbos.cloud.store.v1.File
	23, // 4: cerbos.cloud.store.v1.ChangeDetails.uploader:type_name -> cerbos.cloud.store.v1.ChangeDetails.Uploader
	21, // 5: cerbos.cloud.store.v1.ChangeDetails.git:type_name -> cerbos.cloud.store.v1.ChangeDetails.Git
	22, // 6: cerbos.cloud.store.v1.ChangeDetails.internal:type_name -> cerbos.cloud.store.v1.ChangeDetails.Internal
	6,  // 7: cerbos.cloud.store.v1.FileOp.add_or_update:type_name -> cerbos.cloud.store.v1.File
	26, // 8: cerbos.cloud.store.v1.ModifyFilesRequest.condition:type_name -> cerbos.cloud.store.v1.ModifyFilesRequest.Condition
	9,  // 9: cerbos.cloud.store.v1.ModifyFilesRequest.operations:type_name -> cerbos.cloud.store.v1.FileOp
	8,  // 10: cerbos.cloud.store.v1.ModifyFilesRequest.change_details:type_name -> cerbos.cloud.store.v1.ChangeDetails
	0,  // 11: cerbos.cloud.store.v1.FileError.cause:type_name -> cerbos.cloud.store.v1.FileError.Cause
	27, // 12: cerbos.cloud.store.v1.ReplaceFilesRequest.condition:type_name -> cerbos.cloud.store.v1.ReplaceFilesRequest.Condition
	28, // 13: cerbos.cloud.store.v1.ReplaceFilesRequest.files:type_name -> cerbos.cloud.store.v1.ReplaceFilesRequest.Files
	8,  // 14: cerbos.cloud.store.v1.ReplaceFilesRequest.change_details:type_name -> cerbos.cloud.store.v1.ChangeDetails
	11, // 15: cerbos.cloud.store.v1.ErrDetailValidationFailure.errors:type_name -> cerbos.cloud.store.v1.FileError
	29, // 16: cerbos.cloud.store.v1.ChangeDetails.Git.commit_date:type_name -> google.protobuf.Timestamp
	29, // 17: cerbos.cloud.store.v1.ChangeDetails.Git.author_date:type_name -> google.protobuf.Timestamp
	24, // 18: cerbos.cloud.store.v1.ChangeDetails.Internal.metadata:type_name -> cerbos.cloud.store.v1.ChangeDetails.Internal.MetadataEntry
	25, // 19: cerbos.cloud.store.v1.ChangeDetails.Uploader.metadata:type_name -> cerbos.cloud.store.v1.ChangeDetails.Uploader.MetadataEntry
	30, // 20: cerbos.cloud.store.v1.ChangeDetails.Internal.MetadataEntry.value:type_name -> google.protobuf.Value
	30, // 21: cerbos.cloud.store.v1.ChangeDetails.Uploader.MetadataEntry.value:type_name -> google.protobuf.Value
	6,  // 22: cerbos.cloud.store.v1.ReplaceFilesRequest.Files.files:type_name -> cerbos.cloud.store.v1.File
	3,  // 23: cerbos.cloud.store.v1.CerbosStoreService.ListFiles:input_type -> cerbos.cloud.store.v1.ListFilesRequest
	5,  // 24: cerbos.cloud.store.v1.CerbosStoreService.GetFiles:input_type -> cerbos.cloud.store.v1.GetFilesRequest
	10, // 25: cerbos.cloud.store.v1.CerbosStoreService.ModifyFiles:input_type -> cerbos.cloud.store.v1.ModifyFilesRequest
	13, // 26: cerbos.cloud.store.v1.CerbosStoreService.ReplaceFiles:input_type -> cerbos.cloud.store.v1.ReplaceFilesRequest
	4,  // 27: cerbos.cloud.store.v1.CerbosStoreService.ListFiles:output_type -> cerbos.cloud.store.v1.ListFilesResponse
	7,  // 28: cerbos.cloud.store.v1.CerbosStoreService.GetFiles:output_type -> cerbos.cloud.store.v1.GetFilesResponse
	12, // 29: cerbos.cloud.store.v1.CerbosStoreService.ModifyFiles:output_type -> cerbos.cloud.store.v1.ModifyFilesResponse
	19, // 30: cerbos.cloud.store.v1.CerbosStoreService.ReplaceFiles:output_type -> cerbos.cloud.store.v1.ReplaceFilesResponse
	27, // [27:31] is the sub-list for method output_type
	23, // [23:27] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_cerbos_cloud_store_v1_store_proto_init() }
func file_cerbos_cloud_store_v1_store_proto_init() {
	if File_cerbos_cloud_store_v1_store_proto != nil {
		return
	}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[0].OneofWrappers = []any{
		(*StringMatch_Equals)(nil),
		(*StringMatch_Like)(nil),
		(*StringMatch_In)(nil),
	}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[1].OneofWrappers = []any{}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[2].OneofWrappers = []any{}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[7].OneofWrappers = []any{
		(*ChangeDetails_Git_)(nil),
		(*ChangeDetails_Internal_)(nil),
	}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[8].OneofWrappers = []any{
		(*FileOp_AddOrUpdate)(nil),
		(*FileOp_Delete)(nil),
	}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[9].OneofWrappers = []any{}
	file_cerbos_cloud_store_v1_store_proto_msgTypes[12].OneofWrappers = []any{
		(*ReplaceFilesRequest_ZippedContents)(nil),
		(*ReplaceFilesRequest_Files_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cerbos_cloud_store_v1_store_proto_rawDesc), len(file_cerbos_cloud_store_v1_store_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cerbos_cloud_store_v1_store_proto_goTypes,
		DependencyIndexes: file_cerbos_cloud_store_v1_store_proto_depIdxs,
		EnumInfos:         file_cerbos_cloud_store_v1_store_proto_enumTypes,
		MessageInfos:      file_cerbos_cloud_store_v1_store_proto_msgTypes,
	}.Build()
	File_cerbos_cloud_store_v1_store_proto = out.File
	file_cerbos_cloud_store_v1_store_proto_goTypes = nil
	file_cerbos_cloud_store_v1_store_proto_depIdxs = nil
}
