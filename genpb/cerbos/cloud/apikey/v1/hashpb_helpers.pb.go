// Code generated by protoc-gen-go-hashpb. DO NOT EDIT.
// protoc-gen-go-hashpb v0.4.2

package apikeyv1

import (
	protowire "google.golang.org/protobuf/encoding/protowire"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	hash "hash"
	unsafe "unsafe"
)

func cerbos_cloud_apikey_v1_IssueAccessTokenRequest_hashpb_sum(m *IssueAccessTokenRequest, hasher hash.Hash, ignore map[string]struct{}) {
	if _, ok := ignore["cerbos.cloud.apikey.v1.IssueAccessTokenRequest.client_id"]; !ok {
		_, _ = hasher.Write(protowire.AppendVarint(nil, uint64(len(m.GetClientId()))))
		_, _ = hasher.Write(unsafe.Slice(unsafe.StringData(m.GetClientId()), len(m.GetClientId())))
	}
	if _, ok := ignore["cerbos.cloud.apikey.v1.IssueAccessTokenRequest.client_secret"]; !ok {
		_, _ = hasher.Write(protowire.AppendVarint(nil, uint64(len(m.GetClientSecret()))))
		_, _ = hasher.Write(unsafe.Slice(unsafe.StringData(m.GetClientSecret()), len(m.GetClientSecret())))
	}
}

func cerbos_cloud_apikey_v1_IssueAccessTokenResponse_hashpb_sum(m *IssueAccessTokenResponse, hasher hash.Hash, ignore map[string]struct{}) {
	if _, ok := ignore["cerbos.cloud.apikey.v1.IssueAccessTokenResponse.access_token"]; !ok {
		_, _ = hasher.Write(protowire.AppendVarint(nil, uint64(len(m.GetAccessToken()))))
		_, _ = hasher.Write(unsafe.Slice(unsafe.StringData(m.GetAccessToken()), len(m.GetAccessToken())))
	}
	if _, ok := ignore["cerbos.cloud.apikey.v1.IssueAccessTokenResponse.expires_in"]; !ok {
		if m.GetExpiresIn() != nil {
			google_protobuf_Duration_hashpb_sum(m.GetExpiresIn(), hasher, ignore)
		}
	}
}

func google_protobuf_Duration_hashpb_sum(m *durationpb.Duration, hasher hash.Hash, ignore map[string]struct{}) {
	if _, ok := ignore["google.protobuf.Duration.seconds"]; !ok {
		_, _ = hasher.Write(protowire.AppendVarint(nil, uint64(m.GetSeconds())))
	}
	if _, ok := ignore["google.protobuf.Duration.nanos"]; !ok {
		_, _ = hasher.Write(protowire.AppendVarint(nil, uint64(m.GetNanos())))
	}
}
