// Copyright 2021-2024 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2-devel
// 	protoc        (unknown)
// source: cerbos/cloud/epdp/v1/epdp.proto

package epdpv1

import (
	v1 "github.com/cerbos/cerbos/api/genpb/cerbos/policy/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Deprecated: Marked as deprecated in cerbos/cloud/epdp/v1/epdp.proto.
	Policies         []string                        `protobuf:"bytes,2,rep,name=policies,proto3" json:"policies,omitempty"`
	BuildTimestamp   int64                           `protobuf:"varint,3,opt,name=build_timestamp,json=buildTimestamp,proto3" json:"build_timestamp,omitempty"`
	CommitHash       string                          `protobuf:"bytes,4,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	SourceAttributes map[string]*v1.SourceAttributes `protobuf:"bytes,5,rep,name=source_attributes,json=sourceAttributes,proto3" json:"source_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_cerbos_cloud_epdp_v1_epdp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_cloud_epdp_v1_epdp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_cerbos_cloud_epdp_v1_epdp_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Deprecated: Marked as deprecated in cerbos/cloud/epdp/v1/epdp.proto.
func (x *Metadata) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *Metadata) GetBuildTimestamp() int64 {
	if x != nil {
		return x.BuildTimestamp
	}
	return 0
}

func (x *Metadata) GetCommitHash() string {
	if x != nil {
		return x.CommitHash
	}
	return ""
}

func (x *Metadata) GetSourceAttributes() map[string]*v1.SourceAttributes {
	if x != nil {
		return x.SourceAttributes
	}
	return nil
}

var File_cerbos_cloud_epdp_v1_epdp_proto protoreflect.FileDescriptor

var file_cerbos_cloud_epdp_v1_epdp_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x65,
	0x70, 0x64, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x70, 0x64, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x65, 0x70, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x61, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x65, 0x70, 0x64, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x67, 0x0a, 0x15, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x65, 0x70, 0x64, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x70,
	0x64, 0x70, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cerbos_cloud_epdp_v1_epdp_proto_rawDescOnce sync.Once
	file_cerbos_cloud_epdp_v1_epdp_proto_rawDescData = file_cerbos_cloud_epdp_v1_epdp_proto_rawDesc
)

func file_cerbos_cloud_epdp_v1_epdp_proto_rawDescGZIP() []byte {
	file_cerbos_cloud_epdp_v1_epdp_proto_rawDescOnce.Do(func() {
		file_cerbos_cloud_epdp_v1_epdp_proto_rawDescData = protoimpl.X.CompressGZIP(file_cerbos_cloud_epdp_v1_epdp_proto_rawDescData)
	})
	return file_cerbos_cloud_epdp_v1_epdp_proto_rawDescData
}

var file_cerbos_cloud_epdp_v1_epdp_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cerbos_cloud_epdp_v1_epdp_proto_goTypes = []any{
	(*Metadata)(nil),            // 0: cerbos.cloud.epdp.v1.Metadata
	nil,                         // 1: cerbos.cloud.epdp.v1.Metadata.SourceAttributesEntry
	(*v1.SourceAttributes)(nil), // 2: cerbos.policy.v1.SourceAttributes
}
var file_cerbos_cloud_epdp_v1_epdp_proto_depIdxs = []int32{
	1, // 0: cerbos.cloud.epdp.v1.Metadata.source_attributes:type_name -> cerbos.cloud.epdp.v1.Metadata.SourceAttributesEntry
	2, // 1: cerbos.cloud.epdp.v1.Metadata.SourceAttributesEntry.value:type_name -> cerbos.policy.v1.SourceAttributes
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cerbos_cloud_epdp_v1_epdp_proto_init() }
func file_cerbos_cloud_epdp_v1_epdp_proto_init() {
	if File_cerbos_cloud_epdp_v1_epdp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cerbos_cloud_epdp_v1_epdp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cerbos_cloud_epdp_v1_epdp_proto_goTypes,
		DependencyIndexes: file_cerbos_cloud_epdp_v1_epdp_proto_depIdxs,
		MessageInfos:      file_cerbos_cloud_epdp_v1_epdp_proto_msgTypes,
	}.Build()
	File_cerbos_cloud_epdp_v1_epdp_proto = out.File
	file_cerbos_cloud_epdp_v1_epdp_proto_rawDesc = nil
	file_cerbos_cloud_epdp_v1_epdp_proto_goTypes = nil
	file_cerbos_cloud_epdp_v1_epdp_proto_depIdxs = nil
}
